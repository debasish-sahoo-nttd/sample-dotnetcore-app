
trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

variables:
  - group: my-variable-group

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: BuildAndPushJob
        displayName: 'Build and Push'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
          - script: |
              docker build -t $(ACR_REGISTRY)/$(ACR_REPOSITORY):$(Build.BuildId) .
              docker login -u $(ACR_USERNAME) -p $(ACR_PASSWORD) $(ACR_REGISTRY)
              docker push $(ACR_REGISTRY)/$(ACR_REPOSITORY):$(Build.BuildId)
            displayName: 'Build and Push Docker Image'

  - stage: DeployDev
    displayName: 'Deploy to Dev'
    dependsOn: BuildAndPush
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: DeployDevJob
        displayName: 'Deploy to Dev'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    # Add deployment steps for dev environment
                  displayName: 'Deploy to Dev'

  - stage: DeployTest
    displayName: 'Deploy to Test'
    dependsOn: BuildAndPush
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: DeployTestJob
        displayName: 'Deploy to Test'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'test'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    # Add deployment steps for test environment
                  displayName: 'Deploy to Test'

  - stage: DeployUAT
    displayName: 'Deploy to UAT'
    dependsOn: BuildAndPush
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: DeployUATJob
        displayName: 'Deploy to UAT'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'uat'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    # Add deployment steps for UAT environment
                  displayName: 'Deploy to UAT'

  - stage: DeployProd
    displayName: 'Deploy to Prod'
    dependsOn: BuildAndPush
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: DeployProdJob
        displayName: 'Deploy to Prod'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'prod'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    # Add deployment steps for prod environment
                  displayName: 'Deploy to Prod'