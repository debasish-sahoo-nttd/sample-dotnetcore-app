
trigger:
  branches:
    include:
      - main

resources:
  repositories:
    - repository: ado-utils
      type: github
      name: 'launchbynttdata/lcaf-component-provider_az-pipeline_azdo'
      ref: feature/1456
      endpoint: 'launchbynttdata-github-token'

parameters:
  # serviceConnection may be different for each environment in real-world scenarios
  - name: serviceConnection
    type: string
    default: 'ado-sp'
  - name: agentPool
    type: string
    default: 'container-pool'
  - name: acrName
    type: string
    default: 'dsopublic.azurecr.io'
  - name: dockerImageName
    type: string
    default: 'sample-dotnetcore-app'
  # If imageTag is set to "None", the build ID will be used as the image tag
  - name: imageTag
    type: string
    default: "None"
  - name: dockerRegistry
    type: string
    default: 'dsopublic.azurecr.io'
  - name: aksResourceGroup
    type: string
    default: 'dso-k8s-001'
  - name: aksCluster
    type: string
    default: 'dso-ado-k8s-dev-001-aks'
  - name: helmChart
    type: string
    default: 'dotnet-app'
  - name: helmChartVersion
    type: string
    default: '0.1.0'
  - name: helmReleaseName
    type: string
    default: 'sample'
  

stages:
  - stage: BuildAndPush
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: BuildAndPushJob
        displayName: 'Build and Push'
        pool: ${{ parameters.agentPool }}
        steps:
          - template: templates/steps/acr-build-push-docker-image.yaml
            parameters:
              serviceConnection: ${{ parameters.serviceConnection }}
              dockerImageName: ${{ parameters.dockerImageName }}
              dockerImageTag: $(Build.BuildId)
              acrRegistry: ${{ parameters.acrName }}
          # - task: AzureCLI@2
          #   displayName: 'Build and Push Docker Image'
          #   inputs:
          #     azureSubscription: ${{ parameters.serviceConnection }}
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       echo 'Building and pushing Docker image: ${{ parameters.dockerImageName }}:$(Build.BuildId)'
          #       az acr build --image ${{ parameters.dockerImageName }}:$(Build.BuildId) --registry ${{ parameters.dockerRegistry }} --file Dockerfile .

  - template: templates/stages/helm-app-deploy.yaml
    parameters:
      agentPool: ${{ parameters.agentPool }}
      deployEnvironments:
        - environment: 'dev'
          dependsOn: 'BuildAndPush'
          azureEnvironment: aks-${{ parameters.helmReleaseName }}-dev
          namespace: 'dev'
          releaseName: ${{ parameters.helmReleaseName }}
          acrName: ${{ parameters.acrName }}
          imageName: ${{ parameters.dockerImageName }}
          imageTag: ${{ parameters.imageTag }}
          helmChart: ${{ parameters.helmChart }}
          helmChartVersion: ${{ parameters.helmChartVersion }}
          serviceConnection: ${{ parameters.serviceConnection }}
          aksResourceGroup: ${{ parameters.aksResourceGroup }}
          aksCluster: ${{ parameters.aksCluster }}
        - environment: 'test'
          dependsOn: 'dev_Deploy'
          azureEnvironment: aks-${{ parameters.helmReleaseName }}-test
          namespace: 'test'
          releaseName: ${{ parameters.helmReleaseName }}
          acrName: ${{ parameters.acrName }}
          imageName: ${{ parameters.dockerImageName }}
          imageTag: ${{ parameters.imageTag }}
          helmChart: ${{ parameters.helmChart }}
          helmChartVersion: ${{ parameters.helmChartVersion }}
          serviceConnection: ${{ parameters.serviceConnection }}
          aksResourceGroup: ${{ parameters.aksResourceGroup }}
          aksCluster: ${{ parameters.aksCluster }}
        - environment: 'uat'
          dependsOn: 'test_Deploy'
          azureEnvironment: aks-${{ parameters.helmReleaseName }}-uat
          namespace: 'uat'
          releaseName: ${{ parameters.helmReleaseName }}
          acrName: ${{ parameters.acrName }}
          imageName: ${{ parameters.dockerImageName }}
          imageTag: ${{ parameters.imageTag }}
          helmChart: ${{ parameters.helmChart }}
          helmChartVersion: ${{ parameters.helmChartVersion }}
          serviceConnection: ${{ parameters.serviceConnection }}
          aksResourceGroup: ${{ parameters.aksResourceGroup }}
          aksCluster: ${{ parameters.aksCluster }}
        - environment: 'prod'
          dependsOn: 'uat_Deploy'
          azureEnvironment: aks-${{ parameters.helmReleaseName }}-prod
          namespace: 'prod'
          releaseName: ${{ parameters.helmReleaseName }}
          acrName: ${{ parameters.acrName }}
          imageName: ${{ parameters.dockerImageName }}
          imageTag: ${{ parameters.imageTag }}
          helmChart: ${{ parameters.helmChart }}
          helmChartVersion: ${{ parameters.helmChartVersion }}
          serviceConnection: ${{ parameters.serviceConnection }}
          aksResourceGroup: ${{ parameters.aksResourceGroup }}
          aksCluster: ${{ parameters.aksCluster }}
  